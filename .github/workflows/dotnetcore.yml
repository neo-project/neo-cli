name: .NET Core Test

on: pull_request

env:
  DOTNET_VERSION: 3.0.100

jobs:

  Test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Check format
      run: |
        dotnet tool install --version 3.2.111002 --tool-path ./ dotnet-format --add-source https://dotnet.myget.org/F/format/api/v3/index.json
        ./dotnet-format --check --dry-run -v diagnostic
    - name: Build
      run: |
        dotnet publish -o ./out -c Release neo-cli
        find ./out -name 'config.json' | xargs perl -pi -e 's|LevelDBStore|MemoryStore|g'
    - name: Install dependencies
      run: sudo apt-get install libleveldb-dev expect
    - name: Run tests with expect
      run: expect ./.github/workflows/test-neo-cli.expect
    - name: Run Neo.ConsoleService Tests
      run: |
        find tests -name *.csproj | xargs -I % dotnet add % package coverlet.msbuild
        dotnet test tests/Neo.ConsoleService.Tests/Neo.ConsoleService.Tests.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=lcov /p:CoverletOutput=${GITHUB_WORKSPACE}/coverage/lcov
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

  Test_GUI:
    runs-on: windows-latest
    steps:
      - name: Chectout
        uses: actions/checkout@v1
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Build
        run: dotnet build -c Release neo-gui
